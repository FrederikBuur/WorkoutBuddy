// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutBuddy.Data;

#nullable disable

namespace WorkoutBuddy.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240522174947_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkoutBuddy.Data.ExerciseDetailWorkoutDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExerciseDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkoutDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseDetailId");

                    b.HasIndex("WorkoutDetailId");

                    b.ToTable("ExerciseDetailWorkoutDetail");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.ExerciseLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExerciseDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkoutLogId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseDetailId");

                    b.HasIndex("WorkoutLogId");

                    b.ToTable("ExerciseLog");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.ExerciseSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExerciseLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExerciseLogId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("OneRepMax")
                        .HasColumnType("float");

                    b.Property<int>("Repetitions")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<int>("WeightUnit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseLogId");

                    b.HasIndex("ExerciseLogId1");

                    b.ToTable("ExerciseSet");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.Model.ExerciseDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("MuscleGroups")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExerciseDetail");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.Model.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.Model.WorkoutDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WorkoutDetail");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastPerformed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkoutDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("WorkoutDetailId");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.WorkoutLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutLog");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.ExerciseDetailWorkoutDetail", b =>
                {
                    b.HasOne("WorkoutBuddy.Data.Model.ExerciseDetail", null)
                        .WithMany()
                        .HasForeignKey("ExerciseDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutBuddy.Data.Model.WorkoutDetail", null)
                        .WithMany()
                        .HasForeignKey("WorkoutDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutBuddy.Data.ExerciseLog", b =>
                {
                    b.HasOne("WorkoutBuddy.Data.Model.ExerciseDetail", "ExerciseDetail")
                        .WithMany()
                        .HasForeignKey("ExerciseDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutBuddy.Data.WorkoutLog", "WorkoutLog")
                        .WithMany("ExerciseLogs")
                        .HasForeignKey("WorkoutLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseDetail");

                    b.Navigation("WorkoutLog");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.ExerciseSet", b =>
                {
                    b.HasOne("WorkoutBuddy.Data.ExerciseLog", "ExerciseLog")
                        .WithMany()
                        .HasForeignKey("ExerciseLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutBuddy.Data.ExerciseLog", null)
                        .WithMany("ExerciseSets")
                        .HasForeignKey("ExerciseLogId1");

                    b.Navigation("ExerciseLog");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.Workout", b =>
                {
                    b.HasOne("WorkoutBuddy.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutBuddy.Data.Model.WorkoutDetail", "WorkoutDetail")
                        .WithMany()
                        .HasForeignKey("WorkoutDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("WorkoutDetail");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.WorkoutLog", b =>
                {
                    b.HasOne("WorkoutBuddy.Data.Workout", "Workout")
                        .WithMany("WorkoutLogs")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.ExerciseLog", b =>
                {
                    b.Navigation("ExerciseSets");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.Workout", b =>
                {
                    b.Navigation("WorkoutLogs");
                });

            modelBuilder.Entity("WorkoutBuddy.Data.WorkoutLog", b =>
                {
                    b.Navigation("ExerciseLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
