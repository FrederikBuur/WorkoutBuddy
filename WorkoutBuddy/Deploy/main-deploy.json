{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "18104035312272968561"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "appName": {
      "type": "string"
    },
    "locationPrepend": {
      "type": "string",
      "defaultValue": "we"
    }
  },
  "variables": {
    "rgName": "[format('rg-{0}-{1}-{2}', parameters('environment'), parameters('appName'), parameters('locationPrepend'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('rgName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "mainDeploy",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environment": {
            "value": "[parameters('environment')]"
          },
          "location": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName')), '2021-04-01', 'full').location]"
          },
          "appName": {
            "value": "[parameters('appName')]"
          },
          "locationPrepend": {
            "value": "[parameters('locationPrepend')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "9288914203842073415"
            }
          },
          "parameters": {
            "environment": {
              "type": "string",
              "allowedValues": [
                "dev",
                "test",
                "prod"
              ]
            },
            "appName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "locationPrepend": {
              "type": "string"
            }
          },
          "variables": {
            "identityName": "[format('id-{0}-{1}-{2}', parameters('environment'), parameters('appName'), parameters('locationPrepend'))]",
            "appInsightName": "[format('appi-{0}-{1}-{2}', parameters('environment'), parameters('appName'), parameters('locationPrepend'))]",
            "planName": "[format('plan-{0}-{1}-{2}', parameters('environment'), parameters('appName'), parameters('locationPrepend'))]",
            "appServiceName": "[format('as-{0}-{1}-{2}', parameters('environment'), parameters('appName'), parameters('locationPrepend'))]",
            "keyvaultName": "[format('kv-{0}-{1}-{2}', parameters('environment'), parameters('appName'), parameters('locationPrepend'))]",
            "cosmosDbAccountName": "[format('cosdb-{0}-{1}-{2}', parameters('environment'), parameters('appName'), parameters('locationPrepend'))]",
            "cosmosDbName": "[format('{0}-{1}', parameters('appName'), parameters('environment'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[variables('identityName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('appInsightName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('planName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 0
              },
              "kind": "app",
              "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[variables('appServiceName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
                }
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "SomeConfig",
                      "value": "some-config-value"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[variables('keyvaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": false,
                "enabledForDiskEncryption": false,
                "softDeleteRetentionInDays": 90,
                "tenantId": "[tenant().tenantId]",
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "accessPolicies": [
                  {
                    "tenantId": "[tenant().tenantId]",
                    "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).principalId]",
                    "permissions": {
                      "keys": [
                        "get",
                        "list"
                      ],
                      "secrets": [
                        "get",
                        "list"
                      ],
                      "certificates": []
                    }
                  },
                  {
                    "tenantId": "[tenant().tenantId]",
                    "objectId": "a4d2de89-ed7b-4762-b315-6a8d3d0a7b8f",
                    "permissions": {
                      "keys": [
                        "all"
                      ],
                      "secrets": [
                        "all"
                      ],
                      "certificates": [
                        "all"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2021-03-15",
              "name": "[variables('cosmosDbAccountName')]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": true,
                "enableFreeTier": "[equals(parameters('environment'), 'dev')]",
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Eventual",
                  "maxStalenessPrefix": 1,
                  "maxIntervalInSeconds": 5
                },
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ]
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2021-06-15",
              "name": "[format('{0}/{1}', variables('cosmosDbAccountName'), variables('cosmosDbName'))]",
              "properties": {
                "resource": {
                  "id": "[variables('cosmosDbName')]"
                },
                "options": {
                  "throughput": 1000
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    }
  ]
}